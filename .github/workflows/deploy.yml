name: Deploy to vercel

on:
  push:
    branches:
      - 'master'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node modules
        uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: npm-packages-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Send Discord Notification for Test Success
        if: success()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -H "Content-Type: application/json" \
               -d '{"content": "✅ 테스트 성공: 모든 테스트가 성공적으로 완료되었습니다."}' \
               $DISCORD_WEBHOOK_URL

      - name: Send Discord Notification for Test Failure
        if: failure()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -H "Content-Type: application/json" \
               -d '{"content": "❌ 테스트 실패: 일부 테스트가 실패했습니다."}' \
               $DISCORD_WEBHOOK_URL

  build:
    runs-on: ubuntu-latest
    container: pandoc/latex
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Install mustache (to update the date)
        run: apk add ruby && gem install mustache

      - name: creates output
        run: sh ./build.sh

      - name: Pushes to another repository
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.AUTO_ACTIONS }}
        with:
          source-directory: 'output'
          destination-github-username: jeongminDev
          destination-repository-name: DoodlePlay
          user-email: ${{ secrets.EMAIL }}
          commit-message: ${{ github.event.commits[0].message }}
          target-branch: 'master'

      - name: Send Discord Notification for Build Success
        if: success()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -H "Content-Type: application/json" \
               -d '{"content": "✅ 빌드 성공: Vercel로의 배포가 성공적으로 완료되었습니다."}' \
               $DISCORD_WEBHOOK_URL

      - name: Send Discord Notification for Build Failure
        if: failure()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -H "Content-Type: application/json" \
               -d '{"content": "❌ 빌드 실패: Vercel로의 배포가 실패했습니다."}' \
               $DISCORD_WEBHOOK_URL

      - name: Test get variable exported by push-to-another-repository
        run: echo $DESTINATION_CLONED_DIRECTORY
