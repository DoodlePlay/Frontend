'use client';
import { useState, useEffect } from 'react';

interface TimerBarProps {
  duration: number;
  onComplete?: () => void;
}

const TimerBar: React.FC<TimerBarProps> = ({ duration, onComplete }) => {
  const [timeLeft, setTimeLeft] = useState(duration);

  useEffect(() => {
    if (timeLeft > 0) {
      const timer = setTimeout(() => {
        setTimeLeft(timeLeft - 1);
      }, 1000);

      return () => clearTimeout(timer);
    } else if (timeLeft === 0) {
      onComplete();
    }
  }, [timeLeft, onComplete]);

  const progress = (timeLeft / duration) * 100;

  return (
    <div className="flex items-center">
      <div className="mr-2">
        <svg
          width="29"
          height="37"
          viewBox="0 0 29 37"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M6.25772 18.155C3.65772 15.0662 2.27995 11.2106 2.12439 6.58838C2.12439 6.38838 2.05772 6.23282 1.92439 6.12171C1.79106 5.98838 1.6355 5.92171 1.45772 5.92171H0.724389L0.324389 5.75505L0.12439 5.25505L0.12439 1.25505L0.324389 0.821712L0.357723 0.788378L0.791056 0.588379L27.4577 0.588379L27.9577 0.788378L28.1244 1.25505V5.25505L27.9911 5.75505L27.9577 5.78838L27.5244 5.92171H26.7911C26.6133 5.92171 26.4577 5.98838 26.3244 6.12171C26.1911 6.23282 26.1244 6.38838 26.1244 6.58838C25.9688 11.2106 24.6022 15.0662 22.0244 18.155L21.8577 18.5884L22.0244 19.0217C24.6022 22.1106 25.9688 25.9773 26.1244 30.6217C26.1244 30.7995 26.1911 30.955 26.3244 31.0884L26.7911 31.255H27.5244L27.9577 31.455L28.1244 31.9217L28.1244 35.9217L27.9911 36.4217L27.9577 36.455L27.4577 36.5884H0.791056L0.324389 36.4217L0.12439 35.9217L0.12439 31.9217L0.324389 31.4884L0.357723 31.455C0.446612 31.3217 0.568834 31.255 0.724389 31.255H1.45772L1.92439 31.0884C2.05772 30.955 2.12439 30.7995 2.12439 30.6217C2.27995 25.9773 3.65772 22.1106 6.25772 19.0217L6.39106 18.5884L6.25772 18.155ZM16.8911 18.055C16.9799 17.6773 17.1688 17.3773 17.4577 17.155L17.5911 16.9884C20.4355 14.3662 21.9466 10.9106 22.1244 6.62171L22.0577 6.28838L21.7911 6.02171L21.4577 5.92171L6.82439 5.92171L6.49106 6.02171L6.25772 6.28838L6.15772 6.62171C6.31328 10.955 7.84661 14.4328 10.7577 17.055L10.7911 17.0884L10.8244 17.1217C11.0911 17.3662 11.2799 17.6773 11.3911 18.055L11.4577 18.5884L11.3911 19.155L11.3577 19.2884L10.9244 19.9884L10.7911 20.0884C7.85772 22.7106 6.31328 26.2106 6.15772 30.5884L6.25772 30.9217L6.49106 31.155L6.82439 31.255H21.4577L21.7911 31.155L22.0577 30.9217L22.1244 30.555C21.9466 26.1995 20.4022 22.7106 17.4911 20.0884C17.2022 19.8439 17.0022 19.5773 16.8911 19.2884V19.155L16.7911 18.5884C16.7911 18.4106 16.8244 18.2328 16.8911 18.055ZM11.4577 11.9217L16.7911 11.9217C17.1688 11.9217 17.4911 12.055 17.7577 12.3217C18.0022 12.5662 18.1244 12.8773 18.1244 13.255C18.1244 13.6328 18.0022 13.955 17.7577 14.2217L15.0911 16.8884C14.8244 17.1328 14.5022 17.255 14.1244 17.255C13.7466 17.255 13.4355 17.1328 13.1911 16.8884L10.5244 14.2217C10.2577 13.955 10.1244 13.6328 10.1244 13.255C10.1244 12.8773 10.2577 12.5662 10.5244 12.3217C10.7688 12.055 11.0799 11.9217 11.4577 11.9217ZM8.39106 29.255C8.8355 26.5217 9.94661 24.2328 11.7244 22.3884L11.9577 22.1884C12.4244 21.6995 12.7799 21.1662 13.0244 20.5884H15.2244C15.4688 21.1662 15.8355 21.6995 16.3244 22.1884H16.3577V22.2217C18.2466 24.0662 19.4244 26.4106 19.8911 29.255H8.39106Z"
            fill="#FFC700"
          />
        </svg>
      </div>
      <div className="w-full bg-gray-300 h-6 rounded-full overflow-hidden">
        <div
          className="bg-green-500 h-full"
          style={{ width: `${progress}%` }}
        ></div>
      </div>
    </div>
  );
};

export default TimerBar;
